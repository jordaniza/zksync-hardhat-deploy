/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Fuck, FuckInterface } from "../Fuck";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "setHere",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "z",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x0000008003000039000000400030043f000000000301001900000060033002700000000d0330019700000001022001900000001a0000c13d000000040230008c0000002b0000413d000000000201043b000000e0022002700000000f0420009c000000240000613d000000100220009c0000002b0000c13d0000000002000416000000000202004b0000002b0000c13d000000040230008a000000200220008c0000002b0000413d0000000401100370000000000101043b000000000010041b00000000010000190000002e0001042e0000000001000416000000000101004b0000002b0000c13d0000001401000039000000000010041b0000002001000039000001000010044300000120000004430000000e010000410000002e0001042e0000000001000416000000000101004b0000002b0000c13d000000000100041a000000800010043f00000011010000410000002e0001042e00000000010000190000002f000104300000002d000004320000002e0001042e0000002f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000c5d7802e0000000000000000000000000000000000000000000000000000000079469af300000000000000000000000000000000000000200000008000000000000000008e542c10e8a26532a2b1a78ba412994c287e5c68f3e212092b7e33bf223d46d4";

export class Fuck__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Fuck> {
    return super.deploy(overrides || {}) as Promise<Fuck>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fuck {
    return super.attach(address) as Fuck;
  }
  connect(signer: Signer): Fuck__factory {
    return super.connect(signer) as Fuck__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FuckInterface {
    return new utils.Interface(_abi) as FuckInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Fuck {
    return new Contract(address, _abi, signerOrProvider) as Fuck;
  }
}
